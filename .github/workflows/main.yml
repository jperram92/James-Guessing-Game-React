name: CI/CD with Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          npm ci
          npm install --save-dev @testing-library/react @testing-library/jest-dom react-scripts
      
      - name: Run Tests
        run: |
          CI=true npm test -- --coverage  # Ensure test command is correct

      - name: Upload Test Coverage
        if: always()
        uses: actions/upload-artifact@v2.3.1
        with:
          name: test-coverage
          path: coverage/
          retention-days: 14

  build:
    needs: test  # Make sure the build job only runs after tests pass
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'
        
      - name: Install Dependencies
        run: npm ci
        
      - name: Build
        run: CI=true npm run build  # Ensure the build script is defined in your package.json
    
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: build-output
          path: build/
          retention-days: 14

  # Optional deployment job (if you want to deploy after build)
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      # Deploy your app here (e.g., to Firebase, AWS, etc.)
      - name: Deploy to Hosting Service
        run: |
          echo "Deploying to hosting service..."  # Replace with your actual deploy script
