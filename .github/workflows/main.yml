name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Check branch protection
        if: github.event_name == 'pull_request' && github.event.pull_request.user.login != 'jperram92'
        run: |
          if [[ "${{ github.event.pull_request.base.ref }}" == "main" ]]; then
            echo "⚠️ Changes to main branch require approval from @jperram92"
            exit 1
          fi

  test:
    needs: verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Run Linting
        run: npm run lint || echo "Linting issues found"

      - name: Run Tests
        run: |
          npm test -- --watchAll=false --coverage --ci --testMatch="**/*.test.{ts,tsx}"
          
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: coverage/
          retention-days: 14

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/
          retention-days: 14

  deploy:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build

      - name: Deploy
        run: |
          echo "Deploying to production..."
          # Add your deployment commands here
