name: CI/CD with Tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
      
      - name: Install Dependencies
        run: |
          npm install --force  # Force resolution of dependencies
          npm install --save-dev @testing-library/react @testing-library/jest-dom react-scripts

      # Simple Test: Test if Jest is working
      - name: Simple Test to Check Test Functionality
        run: |
          echo "module.exports = {}" > simpleTest.js  # Create a simple JavaScript file for testing
          echo "describe('Simple Test', () => { it('should run without errors', () => { expect(true).toBe(true); }); });" > simpleTest.test.js  # Add simple test to the file
          npx jest simpleTest.test.js  # Run the simple test

      - name: Run Tests
        run: |
          CI=true npm test -- --coverage  # Ensure test command is correct

      - name: Upload Test Coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage/
          retention-days: 14

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'
        
      - name: Install Dependencies
        run: |
          npm install --force  # Force resolution of dependencies
        
      - name: Build
        run: CI=true npm run build
    
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/
          retention-days: 14

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Deploy your app here (e.g., to Firebase, AWS, etc.)
      - name: Deploy to Hosting Service
        run: |
          echo "Deploying to hosting service..."  # Replace with your actual deploy script
